/*
intuit
面试官是Michael，照片是个俊秀白人小哥，真人是个络腮胡沧桑大叔……
人还是蛮好的，我说啥他都说 that makes sense，非常友好

流程如下：
他三分钟自我介绍 + 面试流程介绍，
我一分钟自我介绍，
十分钟解释OA 代码，分析时空复杂度，
四十五分钟解决三道难度递增的题，题目粘贴在 code editor里， 会给test cases， 写完代码都要先test，再分析时空复杂度。

题目就是最近地里大家都是同一套的那个01grid题，给定一个二维矩阵， 由0和-1构成，-1是墙，0是空地，

第一问，从给定的点出发，向上下左右只走一步，能到达的点坐标， 麻瓜打卡题
第二问， 从给定的点出发，能不能到达所有的0， BFS DFS 并查集都可以做，不过我一说完BFS思路他就叫我直接写……
第三问，现在矩阵里多了一种元素1，矩阵由 -1， 0， 1 构成， 问给定一个起始点，再给定一个结束点，找到最短的从起始点到结束点的路径，这个路径必须覆盖所有的1。 DFS + 回溯可以做
*/

//第一题：输入学生的ID和他上的课程，找到每两个学生上的相同的课程。
//例如，输入{{"58", "A"},  {"94", "B"},  {"17", "A"},  {"58", "B"},  {"17", "B"},  {"58", "C"}}
//输出:[58, 94]: [B]
//        [58, 17]: [A, B]
//        [94, 17]: [B]
//第二题：给出一些课程和课程的先修课，每个课程有且只有一门先修课，并且保证学生只有一条path修完所有课程，求修到一半时的课程名称。
//例如，输入{ {C, D}, {B, C}, {A, B},{E, F}, {D, E}, {F, G}}, 输出 D.
//A-B-C-D-E-F-G
//第三题: 第二题的follow up,假设每门课程可以有多门先修课,找出所有path修到一半课程的名称